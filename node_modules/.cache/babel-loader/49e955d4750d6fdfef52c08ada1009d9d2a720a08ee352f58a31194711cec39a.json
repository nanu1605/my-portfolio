{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tanis\\\\my-portfolio\\\\src\\\\components\\\\SkillsCard.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { motion } from 'framer-motion';\n\n// Styled components for the card layout\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CardContainer = styled(motion.div)`\n  width: 200px;\n  height: 200px;\n  background-color: ${({\n  color\n}) => color};\n  color: white;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 15px;\n  cursor: pointer;\n  position: relative;\n  perspective: 1000px;\n  margin: 1em;\n  box-shadow: 0px 5px 15px rgba(0, 0, 0, 0.2);\n`;\n_c = CardContainer;\nconst CardFront = styled(motion.div)`\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  backface-visibility: hidden;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 1.5em;\n  border-radius: 15px;\n`;\n_c2 = CardFront;\nconst CardBack = styled(motion.div)`\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  backface-visibility: hidden;\n  background-color: white;\n  color: black;\n  transform: rotateY(180deg);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  border-radius: 15px;\n`;\n_c3 = CardBack;\nconst SkillList = styled.ul`\n  list-style-type: none;\n  padding: 0;\n  margin: 0;\n`;\n_c4 = SkillList;\nconst SkillItem = styled.li`\n  margin: 0.5em 0;\n`;\n\n// Flip animation configuration\n_c5 = SkillItem;\nconst flipAnimation = {\n  hidden: {\n    rotateY: 0\n  },\n  visible: {\n    rotateY: 180\n  },\n  transition: {\n    duration: 0.5\n  }\n};\nexport const SkillsCard = ({\n  title,\n  skills,\n  color\n}) => {\n  _s();\n  const [flipped, setFlipped] = useState(false);\n  const toggleFlip = () => setFlipped(!flipped);\n  return /*#__PURE__*/_jsxDEV(CardContainer, {\n    color: color,\n    onClick: toggleFlip,\n    animate: flipped ? 'visible' : 'hidden',\n    variants: flipAnimation,\n    children: [/*#__PURE__*/_jsxDEV(CardFront, {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardBack, {\n      children: /*#__PURE__*/_jsxDEV(SkillList, {\n        children: skills.map((skill, index) => /*#__PURE__*/_jsxDEV(SkillItem, {\n          children: skill\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(SkillsCard, \"QYn2hzWSEiNCpFk01FECw92BS70=\");\n_c6 = SkillsCard;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"CardContainer\");\n$RefreshReg$(_c2, \"CardFront\");\n$RefreshReg$(_c3, \"CardBack\");\n$RefreshReg$(_c4, \"SkillList\");\n$RefreshReg$(_c5, \"SkillItem\");\n$RefreshReg$(_c6, \"SkillsCard\");","map":{"version":3,"names":["React","useState","styled","motion","jsxDEV","_jsxDEV","CardContainer","div","color","_c","CardFront","_c2","CardBack","_c3","SkillList","ul","_c4","SkillItem","li","_c5","flipAnimation","hidden","rotateY","visible","transition","duration","SkillsCard","title","skills","_s","flipped","setFlipped","toggleFlip","onClick","animate","variants","children","fileName","_jsxFileName","lineNumber","columnNumber","map","skill","index","_c6","$RefreshReg$"],"sources":["C:/Users/tanis/my-portfolio/src/components/SkillsCard.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { motion } from 'framer-motion';\r\n\r\n// Styled components for the card layout\r\nconst CardContainer = styled(motion.div)`\r\n  width: 200px;\r\n  height: 200px;\r\n  background-color: ${({ color }) => color};\r\n  color: white;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border-radius: 15px;\r\n  cursor: pointer;\r\n  position: relative;\r\n  perspective: 1000px;\r\n  margin: 1em;\r\n  box-shadow: 0px 5px 15px rgba(0, 0, 0, 0.2);\r\n`;\r\n\r\nconst CardFront = styled(motion.div)`\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  backface-visibility: hidden;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-size: 1.5em;\r\n  border-radius: 15px;\r\n`;\r\n\r\nconst CardBack = styled(motion.div)`\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  backface-visibility: hidden;\r\n  background-color: white;\r\n  color: black;\r\n  transform: rotateY(180deg);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  border-radius: 15px;\r\n`;\r\n\r\nconst SkillList = styled.ul`\r\n  list-style-type: none;\r\n  padding: 0;\r\n  margin: 0;\r\n`;\r\n\r\nconst SkillItem = styled.li`\r\n  margin: 0.5em 0;\r\n`;\r\n\r\n// Flip animation configuration\r\nconst flipAnimation = {\r\n  hidden: { rotateY: 0 },\r\n  visible: { rotateY: 180 },\r\n  transition: { duration: 0.5 },\r\n};\r\n\r\nexport const SkillsCard = ({ title, skills, color }) => {\r\n  const [flipped, setFlipped] = useState(false);\r\n\r\n  const toggleFlip = () => setFlipped(!flipped);\r\n\r\n  return (\r\n    <CardContainer\r\n      color={color}\r\n      onClick={toggleFlip}\r\n      animate={flipped ? 'visible' : 'hidden'}\r\n      variants={flipAnimation}\r\n    >\r\n      <CardFront>\r\n        {title}\r\n      </CardFront>\r\n      <CardBack>\r\n        <SkillList>\r\n          {skills.map((skill, index) => (\r\n            <SkillItem key={index}>{skill}</SkillItem>\r\n          ))}\r\n        </SkillList>\r\n      </CardBack>\r\n    </CardContainer>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}