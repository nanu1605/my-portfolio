{"ast":null,"code":"const regex = /on[A-Z]/;\nfunction wrapper(func, args) {\n  return event => func(event, ...args);\n}\n\n// Wraps any event handlers passed in as props with a function that passes additional arguments\nfunction wrapHandlers(props, ...args) {\n  const handlers = Object.keys(props).filter(propName => regex.test(propName) && typeof props[propName] === 'function');\n  const wrappedHandlers = handlers.reduce((acc, handler) => {\n    acc[handler] = wrapper(props[handler], args);\n    return acc;\n  }, {});\n  return {\n    ...props,\n    ...wrappedHandlers\n  };\n}\nexport { wrapHandlers as default };","map":{"version":3,"names":["regex","wrapper","func","args","event","wrapHandlers","props","handlers","Object","keys","filter","propName","test","wrappedHandlers","reduce","acc","handler","default"],"sources":["C:/Users/tanis/my-portfolio/node_modules/react-tree-graph/dist/module/wrapHandlers.js"],"sourcesContent":["const regex = /on[A-Z]/;\nfunction wrapper(func, args) {\n  return event => func(event, ...args);\n}\n\n// Wraps any event handlers passed in as props with a function that passes additional arguments\nfunction wrapHandlers(props, ...args) {\n  const handlers = Object.keys(props).filter(propName => regex.test(propName) && typeof props[propName] === 'function');\n  const wrappedHandlers = handlers.reduce((acc, handler) => {\n    acc[handler] = wrapper(props[handler], args);\n    return acc;\n  }, {});\n  return {\n    ...props,\n    ...wrappedHandlers\n  };\n}\n\nexport { wrapHandlers as default };\n"],"mappings":"AAAA,MAAMA,KAAK,GAAG,SAAS;AACvB,SAASC,OAAOA,CAACC,IAAI,EAAEC,IAAI,EAAE;EAC3B,OAAOC,KAAK,IAAIF,IAAI,CAACE,KAAK,EAAE,GAAGD,IAAI,CAAC;AACtC;;AAEA;AACA,SAASE,YAAYA,CAACC,KAAK,EAAE,GAAGH,IAAI,EAAE;EACpC,MAAMI,QAAQ,GAAGC,MAAM,CAACC,IAAI,CAACH,KAAK,CAAC,CAACI,MAAM,CAACC,QAAQ,IAAIX,KAAK,CAACY,IAAI,CAACD,QAAQ,CAAC,IAAI,OAAOL,KAAK,CAACK,QAAQ,CAAC,KAAK,UAAU,CAAC;EACrH,MAAME,eAAe,GAAGN,QAAQ,CAACO,MAAM,CAAC,CAACC,GAAG,EAAEC,OAAO,KAAK;IACxDD,GAAG,CAACC,OAAO,CAAC,GAAGf,OAAO,CAACK,KAAK,CAACU,OAAO,CAAC,EAAEb,IAAI,CAAC;IAC5C,OAAOY,GAAG;EACZ,CAAC,EAAE,CAAC,CAAC,CAAC;EACN,OAAO;IACL,GAAGT,KAAK;IACR,GAAGO;EACL,CAAC;AACH;AAEA,SAASR,YAAY,IAAIY,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}