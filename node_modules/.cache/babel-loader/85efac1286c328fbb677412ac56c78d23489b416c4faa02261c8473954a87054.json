{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tanis\\\\my-portfolio\\\\src\\\\components\\\\About.js\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport { motion } from 'framer-motion';\n\n// Section container for About Me\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AboutSection = styled.section`\n  padding: 4em;\n  background: linear-gradient(135deg, #333 0%, #F5F5DC 100%);\n  color: white;\n  text-align: center;\n  min-height: 40vh;\n`;\n\n// Animated section title\n_c = AboutSection;\nconst Title = styled(motion.h2)`\n  font-size: 3em;\n  margin-bottom: 1em;\n  color: white;\n  text-transform: uppercase;\n  letter-spacing: 3px;\n  background: -webkit-linear-gradient(135deg, #ff9a9e, #fad0c4);\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n`;\n\n// Animated paragraph\n_c2 = Title;\nconst Description = styled(motion.p)`\n  font-size: 1.2em;\n  line-height: 1.8;\n  max-width: 800px;\n  margin: 0 auto;\n  text-align: justify;\n  color: white;\n`;\n_c3 = Description;\nconst About = () => {\n  return /*#__PURE__*/_jsxDEV(AboutSection, {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      initial: {\n        opacity: 0,\n        y: -50\n      },\n      animate: {\n        opacity: 1,\n        y: 0\n      },\n      transition: {\n        duration: 1\n      },\n      children: \"About Me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Description, {\n      initial: {\n        opacity: 0,\n        y: 50\n      },\n      animate: {\n        opacity: 1,\n        y: 0\n      },\n      transition: {\n        delay: 0.5,\n        duration: 1\n      },\n      children: \"I am a DevOps Engineer with experience in building and managing CI/CD pipelines, containerization, and automation. At BOSCH, I used Jenkins, Docker, and Kubernetes to improve deployment processes, making our systems faster, more reliable, and easier to scale. I also wrote automation scripts in Python and Shell, which saved time and made daily tasks more efficient. In my full-stack role, I created solutions to make documentation easier for teams. I built a \\\"docs-as-code\\\" framework with DocHub, which reduced manual work and made it simpler to manage documents. I used Sphinx, Graphviz, and PlantUML to automate diagram creation, which saved time and improved our documentation quality. I also added secure role-based access to documents and set up CI/CD pipelines to keep everything updated, making our workflow smoother. During Google Summer of Code, I worked on R packages for the PEcAn project. I improved code quality and ensured it met CRAN guidelines, making the software easier to use and maintain. I have skills in Python, Java, R, JavaScript, Go, and SQL. I work with cloud platforms like AWS and Azure, and I am familiar with tools like Docker, Kubernetes, Terraform, Jenkins, and Git. I have experience in full-stack development, automation, and infrastructure as code. I enjoy solving challenges and working on open-source projects. Some of my personal projects include building a Virtual Dressing Room using AI/ML and OpenCV, and creating an automated attendance system with Java. These projects reflect my interest in making useful and user-friendly software. I am eager to work on projects that combine development, automation, and operations. My goal is to use technology to solve problems, improve processes, and make a real impact. If you'd like to connect, feel free to reach out.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_c4 = About;\nexport default About;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"AboutSection\");\n$RefreshReg$(_c2, \"Title\");\n$RefreshReg$(_c3, \"Description\");\n$RefreshReg$(_c4, \"About\");","map":{"version":3,"names":["React","styled","motion","jsxDEV","_jsxDEV","AboutSection","section","_c","Title","h2","_c2","Description","p","_c3","About","children","initial","opacity","y","animate","transition","duration","fileName","_jsxFileName","lineNumber","columnNumber","delay","_c4","$RefreshReg$"],"sources":["C:/Users/tanis/my-portfolio/src/components/About.js"],"sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { motion } from 'framer-motion';\r\n\r\n// Section container for About Me\r\nconst AboutSection = styled.section`\r\n  padding: 4em;\r\n  background: linear-gradient(135deg, #333 0%, #F5F5DC 100%);\r\n  color: white;\r\n  text-align: center;\r\n  min-height: 40vh;\r\n`;\r\n\r\n// Animated section title\r\nconst Title = styled(motion.h2)`\r\n  font-size: 3em;\r\n  margin-bottom: 1em;\r\n  color: white;\r\n  text-transform: uppercase;\r\n  letter-spacing: 3px;\r\n  background: -webkit-linear-gradient(135deg, #ff9a9e, #fad0c4);\r\n  -webkit-background-clip: text;\r\n  -webkit-text-fill-color: transparent;\r\n`;\r\n\r\n// Animated paragraph\r\nconst Description = styled(motion.p)`\r\n  font-size: 1.2em;\r\n  line-height: 1.8;\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n  text-align: justify;\r\n  color: white;\r\n`;\r\n\r\nconst About = () => {\r\n  return (\r\n    <AboutSection>\r\n      {/* Fancy Title */}\r\n      <Title\r\n        initial={{ opacity: 0, y: -50 }}\r\n        animate={{ opacity: 1, y: 0 }}\r\n        transition={{ duration: 1 }}\r\n      >\r\n        About Me\r\n      </Title>\r\n\r\n      {/* Animated description paragraph */}\r\n      <Description\r\n        initial={{ opacity: 0, y: 50 }}\r\n        animate={{ opacity: 1, y: 0 }}\r\n        transition={{ delay: 0.5, duration: 1 }}\r\n      >\r\n        I am a DevOps Engineer with experience in building and managing CI/CD pipelines, containerization, and automation. At BOSCH, I used Jenkins, Docker, and Kubernetes to improve deployment processes, making our systems faster, more reliable, and easier to scale. I also wrote automation scripts in Python and Shell, which saved time and made daily tasks more efficient.\r\n        In my full-stack role, I created solutions to make documentation easier for teams. I built a \"docs-as-code\" framework with DocHub, which reduced manual work and made it simpler to manage documents. I used Sphinx, Graphviz, and PlantUML to automate diagram creation, which saved time and improved our documentation quality. I also added secure role-based access to documents and set up CI/CD pipelines to keep everything updated, making our workflow smoother.\r\n        During Google Summer of Code, I worked on R packages for the PEcAn project. I improved code quality and ensured it met CRAN guidelines, making the software easier to use and maintain.\r\n        I have skills in Python, Java, R, JavaScript, Go, and SQL. I work with cloud platforms like AWS and Azure, and I am familiar with tools like Docker, Kubernetes, Terraform, Jenkins, and Git. I have experience in full-stack development, automation, and infrastructure as code.\r\n        I enjoy solving challenges and working on open-source projects. Some of my personal projects include building a Virtual Dressing Room using AI/ML and OpenCV, and creating an automated attendance system with Java. These projects reflect my interest in making useful and user-friendly software.\r\n        I am eager to work on projects that combine development, automation, and operations. My goal is to use technology to solve problems, improve processes, and make a real impact. If you'd like to connect, feel free to reach out.\r\n      </Description>\r\n    </AboutSection>\r\n  );\r\n};\r\n\r\nexport default About;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,MAAM,QAAQ,eAAe;;AAEtC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,YAAY,GAAGJ,MAAM,CAACK,OAAO;AACnC;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AAAAC,EAAA,GARMF,YAAY;AASlB,MAAMG,KAAK,GAAGP,MAAM,CAACC,MAAM,CAACO,EAAE,CAAC;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AAAAC,GAAA,GAXMF,KAAK;AAYX,MAAMG,WAAW,GAAGV,MAAM,CAACC,MAAM,CAACU,CAAC,CAAC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GAPIF,WAAW;AASjB,MAAMG,KAAK,GAAGA,CAAA,KAAM;EAClB,oBACEV,OAAA,CAACC,YAAY;IAAAU,QAAA,gBAEXX,OAAA,CAACI,KAAK;MACJQ,OAAO,EAAE;QAAEC,OAAO,EAAE,CAAC;QAAEC,CAAC,EAAE,CAAC;MAAG,CAAE;MAChCC,OAAO,EAAE;QAAEF,OAAO,EAAE,CAAC;QAAEC,CAAC,EAAE;MAAE,CAAE;MAC9BE,UAAU,EAAE;QAAEC,QAAQ,EAAE;MAAE,CAAE;MAAAN,QAAA,EAC7B;IAED;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eAGRrB,OAAA,CAACO,WAAW;MACVK,OAAO,EAAE;QAAEC,OAAO,EAAE,CAAC;QAAEC,CAAC,EAAE;MAAG,CAAE;MAC/BC,OAAO,EAAE;QAAEF,OAAO,EAAE,CAAC;QAAEC,CAAC,EAAE;MAAE,CAAE;MAC9BE,UAAU,EAAE;QAAEM,KAAK,EAAE,GAAG;QAAEL,QAAQ,EAAE;MAAE,CAAE;MAAAN,QAAA,EACzC;IAOD;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAa,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEnB,CAAC;AAACE,GAAA,GA3BIb,KAAK;AA6BX,eAAeA,KAAK;AAAC,IAAAP,EAAA,EAAAG,GAAA,EAAAG,GAAA,EAAAc,GAAA;AAAAC,YAAA,CAAArB,EAAA;AAAAqB,YAAA,CAAAlB,GAAA;AAAAkB,YAAA,CAAAf,GAAA;AAAAe,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}